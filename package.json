import { useState } from 'react'
import {
  FileUploadDropzone,
  FileUploadButton,
  FileUploadCompact,
  FileUploadPreview,
  FileUploadImage
} from '@drag-ui/drag-ui'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'

function App() {
  const [count, setCount] = useState(0)

  return (
    <>
      <div className='bg-red-500 md:bg-blue-500'>
        hii there
      </div>
      <JSONConfigUpload />
    </>
  )
}

type FileUploadConfig = {
  variant: 'dropzone' | 'button' | 'compact' | 'preview' | 'image'
  colorTheme: string
  size: string
  radius: string
  maxFileSize: number
  maxFiles: number
  acceptedFileTypes: string[]
  labels: {
    uploadText: string
    dragText: string
    browseText: string
    errorText: string
    successText: string
  }
  showProgress: boolean
  showPreview: boolean
  showColorPicker: boolean
  disabled: boolean
}

function JSONConfigUpload() {
  const handleFilesChange = (files: File[]) => {
    console.log('Selected files:', files)
    // Handle your files here
  }

  const handleError = (error: unknown) => {
    console.error('Upload error:', error)
    // Handle errors here
  }

  const handleColorChange = (theme: string) => {
    console.log('Theme changed to:', theme)
    // Handle theme changes here
  }

  const config: FileUploadConfig = {
    variant: 'dropzone',
    colorTheme: 'emerald',
    size: 'md',
    radius: 'lg',
    maxFileSize: 10485760,
    maxFiles: 5,
    acceptedFileTypes: [
      'image/*',
      '.pdf',
      '.doc',
      '.docx'
    ],
    labels: {
      uploadText: 'Upload your files',
      dragText: 'Drag and drop files here, or click to browse',
      browseText: 'Browse Files',
      errorText: 'Upload failed',
      successText: 'Upload successful'
    },
    showProgress: true,
    showPreview: true,
    showColorPicker: true,
    disabled: false
  }

  // Choose the appropriate component based on variant
  const Component =
    {
      dropzone: FileUploadDropzone,
      button: FileUploadButton,
      compact: FileUploadCompact,
      preview: FileUploadPreview,
      image: FileUploadImage
    }[config.variant || 'dropzone']

  return (
    <Component
      config={config}
      onFilesChange={handleFilesChange}
      onError={handleError}
      onColorChange={handleColorChange}
    />
  )
}

export default App